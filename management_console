It seems like you want to reuse or adapt the provided IAM policy for a similar purpose. If you're looking to create a **console-specific policy** (read-only access) based on the existing execution policy, you can modify the actions to focus on `Describe`, `List`, and `Get` permissions. Below is an example of how you can transform the provided policy into a **console policy**:

### Console-Specific Policy (Read-Only Access)
```json
{
    "iam_policy_name": "iam-${lob}-${appid}-${region}-${appname}-mlops_console_resource_management",
    "description": "This IAM policy provides read-only permissions to interact with AWS services such as SageMaker, S3, Secrets Manager, ECR, and others for monitoring and viewing resources in the AWS Management Console.",
    "policy_document": {
        "Version": "2012-10-17",
        "Statement": [
            {
                "Sid": "MLFlowConsoleReadOnly",
                "Effect": "Allow",
                "Action": [
                    "sagemaker:DescribeMlflowTrackingServer",
                    "sagemaker-mlflow:GetExperiment",
                    "sagemaker-mlflow:GetExperimentByName",
                    "sagemaker-mlflow:GetRun",
                    "sagemaker-mlflow:GetMetricHistory",
                    "sagemaker-mlflow:SearchRuns",
                    "sagemaker-mlflow:ListArtifacts",
                    "sagemaker-mlflow:GetRegisteredModel",
                    "sagemaker-mlflow:GetModelVersion",
                    "sagemaker-mlflow:SearchModelVersions",
                    "sagemaker-mlflow:SearchRegisteredModels",
                    "sagemaker-mlflow:GetModelVersionByAlias"
                ],
                "Resource": "arn:aws:sagemaker:${region}:${aws_account_id}:mlflow-tracking-server/*",
                "Condition": {
                    "StringEquals": {
                        "sagemaker:ResourceTag/ModelGroup": "ModelGroupA"
                    }
                }
            },
            {
                "Sid": "S3ConsoleReadOnly",
                "Effect": "Allow",
                "Action": [
                    "s3:GetBucketAcl",
                    "s3:ListBucket",
                    "s3:ListBucketVersions",
                    "s3:ListAllMyBuckets",
                    "s3:GetBucketCORS",
                    "s3:GetBucketLocation",
                    "s3:GetBucketTagging"
                ],
                "Resource": "arn:aws:s3:::*"
            },
            {
                "Sid": "SecretsManagerConsoleReadOnly",
                "Effect": "Allow",
                "Action": [
                    "secretsmanager:DescribeSecret",
                    "secretsmanager:GetSecretValue",
                    "secretsmanager:ListSecretVersionIds",
                    "secretsmanager:ListSecrets"
                ],
                "Resource": "arn:aws:secretsmanager:${region}:${aws_account_id}:secret:/secret/sagemaker/${env}/${region}/*",
                "Condition": {
                    "StringEqualsIgnoreCase": {
                        "aws:ResourceTag/OwnerSM": "$${aws:userid}"
                    }
                }
            },
            {
                "Sid": "IAMConsoleReadOnly",
                "Effect": "Allow",
                "Action": [
                    "iam:ListRoles"
                ],
                "Resource": "*"
            },
            {
                "Sid": "CloudWatchLogsConsoleReadOnly",
                "Effect": "Allow",
                "Action": [
                    "logs:DescribeLogGroups",
                    "logs:DescribeLogStreams",
                    "logs:GetLogEvents",
                    "logs:GetLogGroupFields",
                    "logs:GetLogRecord",
                    "logs:ListTagsLogGroup"
                ],
                "Resource": "arn:aws:logs:${region}:${aws_account_id}:*"
            },
            {
                "Sid": "ECRConsoleReadOnly",
                "Effect": "Allow",
                "Action": [
                    "ecr:DescribeImages",
                    "ecr:ListImages",
                    "ecr:DescribeRepositories",
                    "ecr:ListTagsForResource",
                    "ecr:GetRepositoryPolicy"
                ],
                "Resource": "arn:aws:ecr:${region}:${aws_account_id}:repository/*",
                "Condition": {
                    "StringEquals": {
                        "ecr:ResourceTag/DomainId": "$${sagemaker:DomainId}"
                    }
                }
            },
            {
                "Sid": "EC2ConsoleReadOnly",
                "Effect": "Allow",
                "Action": [
                    "ec2:DescribeNetworkInterfaces",
                    "ec2:DescribeVpcs",
                    "ec2:DescribeDhcpOptions",
                    "ec2:DescribeSubnets",
                    "ec2:DescribeSecurityGroups",
                    "ec2:DescribeVpcEndpoints"
                ],
                "Resource": "*"
            },
            {
                "Sid": "CloudWatchConsoleReadOnly",
                "Effect": "Allow",
                "Action": [
                    "cloudwatch:DescribeAlarms",
                    "cloudwatch:GetMetricData",
                    "cloudwatch:GetMetricStatistics",
                    "cloudwatch:ListMetrics"
                ],
                "Resource": "*",
                "Condition": {
                    "StringLike": {
                        "cloudwatch:namespace": "aws/sagemaker/*"
                    }
                }
            },
            {
                "Sid": "KMSConsoleReadOnly",
                "Effect": "Allow",
                "Action": [
                    "kms:ListAliases"
                ],
                "Resource": "*"
            }
        ]
    }
}
```

### Key Changes:
1. **Read-Only Actions**: Replaced write actions (`Create`, `Update`, `Delete`) with read-only actions (`Describe`, `List`, `Get`).
2. **Resource Scope**: Kept resource ARNs consistent with the execution policy but expanded some to `*` for read-only access where appropriate.
3. **Conditional Tags**: Retained conditions based on tags (e.g., `sagemaker:ResourceTag/ModelGroup`) to ensure access is restricted to specific resources.
4. **Service Coverage**: Included permissions for SageMaker, S3, Secrets Manager, IAM, CloudWatch Logs, ECR, EC2, and KMS.

### Use Case:
This policy is ideal for users who need to **monitor and view resources** in the AWS Management Console but should not have permissions to modify or delete them. Attach this policy to roles or users who require read-only access for auditing, monitoring, or troubleshooting purposes.

Let me know if you need further adjustments!
